{
	"info": {
		"_postman_id": "93b4bd03-211e-43a9-9445-19b4b920c8c8",
		"name": "qa",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "46130365",
		"_collection_link": "https://amjadmhajna.postman.co/workspace/AMJAD-MHAJNA's-Workspace~672a95f5-41d6-4aba-820e-fbfc8ec2f648/collection/46130365-93b4bd03-211e-43a9-9445-19b4b920c8c8?action=share&source=collection_link&creator=46130365"
	},
	"item": [
		{
			"name": "QA SERCH",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": [
				{
					"name": "PartialUpdateBooking",
					"originalRequest": {
						"method": "GET",
						"header": []
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "QA BOOKING filter",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is an array\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an(\"array\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains booking IDs\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    jsonData.forEach(item => {\r",
							"        pm.expect(item).to.have.property(\"bookingid\");\r",
							"    });\r",
							"});\r",
							"\r",
							"pm.test(\"At least one result found\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.be.above(0);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is an array\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an(\"array\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains booking IDs\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    jsonData.forEach(item => {\r",
							"        pm.expect(item).to.have.property(\"bookingid\");\r",
							"    });\r",
							"});\r",
							"\r",
							"pm.test(\"At least one result found\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.be.above(0);\r",
							"});\r",
							"\r",
							"pm.test(\"Each bookingid is a number\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    jsonData.forEach(item => {\r",
							"        pm.expect(item.bookingid).to.be.a(\"number\");\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Full booking includes firstname and lastname\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.firstname).to.eql(\"amjad\");\r",
							"    pm.expect(jsonData.lastname).to.eql(\"Brown\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking?firstname=amjad&lastname=Brown",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking"
					],
					"query": [
						{
							"key": "firstname",
							"value": "amjad"
						},
						{
							"key": "lastname",
							"value": "Brown"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "qa",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "BOOKING",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "creat",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 or 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has bookingid and booking object\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"bookingid\");\r",
							"    pm.expect(jsonData).to.have.property(\"booking\");\r",
							"});\r",
							"\r",
							"pm.test(\"Booking details are correct\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    const booking = jsonData.booking;\r",
							"\r",
							"    pm.expect(booking.firstname).to.eql(\"amjad\");\r",
							"    pm.expect(booking.lastname).to.eql(\"Brown\");\r",
							"    pm.expect(booking.totalprice).to.eql(111);\r",
							"    pm.expect(booking.depositpaid).to.be.true;\r",
							"    pm.expect(booking.bookingdates.checkin).to.eql(\"2018-01-01\");\r",
							"    pm.expect(booking.bookingdates.checkout).to.eql(\"2019-01-01\");\r",
							"    pm.expect(booking.additionalneeds).to.eql(\"Breakfast\");\r",
							"})\r",
							"pm.test(\"Firstname length is more than 2 characters\", function () {\r",
							"    const booking = pm.response.json().booking;\r",
							"    pm.expect(booking.firstname.length).to.be.above(2);\r",
							"});\r",
							"\r",
							"pm.test(\"Checkout date is after checkin date\", function () {\r",
							"    const bookingdates = pm.response.json().booking.bookingdates;\r",
							"    const checkin = new Date(bookingdates.checkin);\r",
							"    const checkout = new Date(bookingdates.checkout);\r",
							"    pm.expect(checkout.getTime()).to.be.above(checkin.getTime());\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"amjad\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/booking",
					"host": [
						"{{URL}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "creat xml",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set('TOKEN', pm.response.json().token) ;"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/auth",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define the old data to compare with the new data\r",
							"const oldData = {\r",
							"    bookingid: 1085,\r",
							"    booking: {\r",
							"        firstname: \"John\",\r",
							"        lastname: \"Doe\",\r",
							"        totalprice: 100,\r",
							"        depositpaid: false,\r",
							"        bookingdates: {\r",
							"            checkin: \"2018-01-01\",\r",
							"            checkout: \"2019-01-01\"\r",
							"        },\r",
							"        additionalneeds: \"None\"\r",
							"    }\r",
							"};\r",
							"\r",
							"// Check that the response is valid\r",
							"pm.test(\"Response is valid\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"// Compare the new data with the old data\r",
							"const newData = pm.response.json();\r",
							"let hasChanged = false;\r",
							"\r",
							"// Check for changes in the booking fields\r",
							"for (const key in newData.booking) {\r",
							"    if (newData.booking[key] !== oldData.booking[key]) {\r",
							"        hasChanged = true;\r",
							"        break;\r",
							"    }\r",
							"}\r",
							"\r",
							"// Assert that at least one field has changed\r",
							"pm.test(\"At least one field has changed\", () => {\r",
							"    pm.expect(hasChanged).to.be.true;\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Send a GET request to retrieve existing booking data\r",
							"const bookingId = 3236;\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: `https://restful-booker.herokuapp.com/booking/${bookingId}`,\r",
							"    method: 'GET'\r",
							"}, function (err, res) {\r",
							"    if (err) {\r",
							"        console.error('Error fetching existing booking data:', err);\r",
							"        return;\r",
							"    }\r",
							"    // Store existing data in environment variables\r",
							"    const existingData = res.json();\r",
							"    pm.environment.set('existing_firstname', existingData.firstname);\r",
							"    pm.environment.set('existing_lastname', existingData.lastname);\r",
							"    pm.environment.set('existing_totalprice', existingData.totalprice);\r",
							"    pm.environment.set('existing_depositpaid', existingData.depositpaid);\r",
							"    pm.environment.set('existing_bookingdates', JSON.stringify(existingData.bookingdates));\r",
							"    pm.environment.set('existing_additionalneeds', existingData.additionalneeds);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "{{TOKEN}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"bookingid\": 1085,\r\n    \"booking\": {\r\n        \"firstname\": \"amjad\",\r\n        \"lastname\": \"Brown\",\r\n        \"totalprice\": 111,\r\n        \"depositpaid\": true,\r\n        \"bookingdates\": {\r\n            \"checkin\": \"2018-01-01\",\r\n            \"checkout\": \"2019-01-01\"\r\n        },\r\n        \"additionalneeds\": \"Breakfast\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/4082",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"4082"
					]
				}
			},
			"response": []
		},
		{
			"name": "update xml",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "PartialUpdateBooking",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Cookie",
						"value": "{{TOKEN}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"bookingid\": 1410,\r\n    \"booking\": {\r\n        \"firstname\": \"amjad1\",\r\n        \"lastname\": \"Brown\",\r\n        \"totalprice\": 111,\r\n        \"depositpaid\": true,\r\n        \"bookingdates\": {\r\n            \"checkin\": \"2018-01-01\",\r\n            \"checkout\": \"2019-01-01\"\r\n        },\r\n        \"additionalneeds\": \"Breakfast\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/1410",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"1410"
					]
				}
			},
			"response": []
		},
		{
			"name": "orng",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "token orng",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "Authorization",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL1}}",
					"host": [
						"{{URL1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Authorization ID",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "/distance",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": "{{TOKEN}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL1}}/distance",
					"host": [
						"{{URL1}}"
					],
					"path": [
						"distance"
					]
				}
			},
			"response": []
		},
		{
			"name": "air token",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "email",
							"value": "test@airportgap.com",
							"type": "text"
						},
						{
							"key": "password",
							"value": "airportgappassword",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://airportgap.com/api/tokens",
					"protocol": "https",
					"host": [
						"airportgap",
						"com"
					],
					"path": [
						"api",
						"tokens"
					]
				}
			},
			"response": []
		}
	]
}